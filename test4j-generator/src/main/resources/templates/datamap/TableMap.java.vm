package ${cfg.packTableMap};

import cn.org.atool.fluent.mybatis.annotation.ColumnDef;
import cn.org.atool.fluent.mybatis.annotation.ColumnDef.PrimaryType;
import com.baomidou.mybatisplus.annotation.TableName;
import org.test4j.module.ICore.DataMap;
import org.test4j.tools.datagen.KeyValue;

import java.util.Date;
import java.util.function.Consumer;

import ${cfg.packMP}.${cfg.fileMP};
import ${cfg.packMP}.${cfg.fileMP}.Column;

/**
 * @ClassName ${cfg.fileTableMap}
 * @Description ${cfg.fileTableMap}
 *
 * @author ${author}
 */
@TableName(${cfg.fileMP}.Table_Name)
public class ${cfg.fileTableMap} extends DataMap<${cfg.fileTableMap}> {
#foreach($field in ${table.fields})
    #if(${field.keyFlag})
        #if(${field.keyIdentityFlag})#set($primary=", primary = PrimaryType.AutoIncrease")#else#set($primary=", primary = PrimaryType.Customized")#end
    #else
        #set($primary="")
    #end
    /**
     * 设置${table.name}对象${field.name}字段值
     */
    @ColumnDef(type = "${field.type}"${primary})
    public transient final KeyValue<${cfg.fileTableMap}> ${field.name} = new KeyValue(this, Column.${field.name});
#end

    public ${cfg.fileTableMap}() {
        super();
    }

    public ${cfg.fileTableMap}(int size) {
        super(size);
    }

    /**
     * 创建${cfg.fileTableMap}
     * 并初始化主键和gmtCreate, gmtModified, isDeleted等特殊值
     *
     */
    public ${cfg.fileTableMap} init() {
#foreach($field in ${table.fields})
    #if(${field.keyFlag})
    #if(${field.keyIdentityFlag})
        this.${field.name}.autoIncrease();
    #end
    #elseif(${cfg.field_gmtModified} == ${field.name} || ${cfg.field_gmtCreated} == ${field.name})
        this.${field.name}.values(new Date());
    #elseif(${cfg.field_logicDeleted} == ${field.name} && ${field.propertyType} == 'Boolean')
        this.${field.name}.values(false);
    #end
#end
        return this;
    }

    public ${cfg.fileTableMap} with(Consumer<${cfg.fileTableMap}> init) {
        init.accept(this);
        return this;
    }

    public static ${cfg.fileTableMap} create() {
        return new ${cfg.fileTableMap}(1);
    }

    public static ${cfg.fileTableMap} create(int size) {
        return new ${cfg.fileTableMap}(size);
    }

    public static class Factory {
        public ${cfg.fileTableMap} create() {
            return ${cfg.fileTableMap}.create();
        }

        public ${cfg.fileTableMap} create(int size) {
            return ${cfg.fileTableMap}.create(size);
        }

        public ${cfg.fileTableMap} createWithInit() {
            return ${cfg.fileTableMap}.create(1).init();
        }

        public ${cfg.fileTableMap} createWithInit(int size) {
            return ${cfg.fileTableMap}.create(size).init();
        }
    }
}