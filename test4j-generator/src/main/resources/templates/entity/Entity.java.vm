package ${entity.package};

import cn.org.atool.fluent.mybatis.base.IEntity;
import ${cfg.packEntityHelper}.${cfg.fileEntityHelper};
import ${cfg.packMP}.${cfg.fileMP};
import ${cfg.packMP}.${cfg.fileMP}.Column;
import com.baomidou.mybatisplus.annotation.*;
import lombok.Getter;
import lombok.Setter;
import lombok.experimental.Accessors;
#foreach($pkg in ${table.importPackages})
#if(!$pkg.startsWith("com.baomidou.mybatisplus.annotation"))
import $pkg;
#end
#end
import java.util.Map;
$!{cfg.interfacePack}
/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 */
@Getter
@Setter
#if(${cfg.chainSet})
@Accessors(chain = true)
#end
#if(${table.convert})
@TableName(${cfg.fileMP}.Table_Name)
#end
public class ${entity.name} implements IEntity #if(${cfg.interface}), ${cfg.interfaceName}#end{
    private static final long serialVersionUID = 1L;

## ---------- for each 字段循环开始 -----------
#foreach($field in ${table.fields})
    /**
     * ${field.comment}
     */
#if(${field.keyFlag})## 主键
    #set($keyPropertyName=${field.propertyName})
    #if(${field.keyIdentityFlag})
@TableId(value = Column.${field.name}, type = IdType.AUTO)
    #elseif(!$null.isNull(${idType}) && "$!idType" != "")
@TableId(value = Column.${field.name}, type = IdType.${idType})
    #elseif(${field.convert})
@TableId(value = Column.${field.name})
    #end
#elseif(${field.convert})
    #if(${cfg.field_gmtModified} == ${field.name})
    @TableField(value = Column.${field.name}, update = "now()", fill = FieldFill.INSERT_UPDATE)
    #elseif(${cfg.field_gmtCreated} == ${field.name})
    @TableField(value = Column.${field.name}, update = "now()", fill = FieldFill.INSERT)
    #elseif(${cfg.field_logicDeleted}==${field.name})## 逻辑删除字段
    @TableField(value = Column.${field.name}, update = "0", fill = FieldFill.INSERT)
    #else
    @TableField(value = Column.${field.name})
    #end
#end
    private ${field.propertyType} ${field.propertyName};
    #end

## ---------- for each 字段循环结束 -----------
    @Override
    public Serializable findPk() {
    #if(${keyPropertyName})
        return this.${keyPropertyName};
    #else
        return null;
    #end
    }

    /**
     * 将实体对象转换为map
     */
    @Override
    public Map<String, Object> toMap() {
        return ${cfg.fileEntityHelper}.map(this);
    }
}
