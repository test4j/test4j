package ${tableMix.package};

import ${tableMap.package}.${tableMap.name};
import org.test4j.hamcrest.matcher.modes.EqMode;
import org.test4j.module.spec.IMix;
import org.test4j.module.spec.annotations.Step;

/**
 * 数据库${table}表数据准备和校验通用方法
 *
 * @author ${author}
 */
public class ${tableMix.name} implements IMix {
    @Step("清空表[${table}]数据")
    public ${tableMix.name} clean${entityPrefix}Table() {
        db.table("${table}").clean();
        return this;
    }

    @Step("准备表[${table}]数据{1}")
    public ${tableMix.name} ready${entityPrefix}Table(${tableMap.name} data) {
        db.table("${table}").insert(data);
        return this;
    }

    @Step("验证表[${table}]有全表数据{1}")
    public ${tableMix.name} check${entityPrefix}Table(${tableMap.name} data) {
        db.table("${table}").query().eqDataMap(data, EqMode.IGNORE_ORDER);
        return this;
    }

    @Step("验证表[${table}]有符合条件{1}的数据{2}")
    public ${tableMix.name} check${entityPrefix}Table(String where, ${tableMap.name} data) {
        db.table("${table}").queryWhere(where).eqDataMap(data, EqMode.IGNORE_ORDER);
        return this;
    }

    @Step("验证表[${table}]有符合条件{1}的数据{2}")
    public ${tableMix.name} check${entityPrefix}Table(${tableMap.name} where, ${tableMap.name} data) {
        db.table("${table}").queryWhere(where).eqDataMap(data, EqMode.IGNORE_ORDER);
        return this;
    }

    @Step("验证表[${table}]有{1}条符合条件{2}的数据")
    public ${tableMix.name} count${entityPrefix}Table(int count, ${tableMap.name} where) {
        db.table("${table}").queryWhere(where).sizeEq(count);
        return this;
    }

    @Step("验证表[${table}]有{1}条符合条件{2}的数据")
    public ${tableMix.name} count${entityPrefix}Table(int count, String where) {
        db.table("${table}").queryWhere(where).sizeEq(count);
        return this;
    }

    @Step("验证表[${table}]有{1}条数据")
    public ${tableMix.name} count${entityPrefix}Table(int count) {
        db.table("${table}").query().sizeEq(count);
        return this;
    }
}